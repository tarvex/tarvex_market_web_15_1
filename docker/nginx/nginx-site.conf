# Rate limiting configuration
limit_req_zone $binary_remote_addr zone=one:10m rate=30r/m;

# Real IP configuration
set_real_ip_from 0.0.0.0/0;
real_ip_header X-Forwarded-For;
real_ip_recursive on;

# Custom log format for rate limiting
log_format rate_limit '$remote_addr - $remote_user [$time_local] '
                     '"$request" $status $body_bytes_sent '
                     '"$http_referer" "$http_user_agent" '
                     'Rate-Limit: $limit_req_status';

server {
    listen 80;
    server_name tarvex.tj;
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;
    server_name tarvex.tj;

    ssl_certificate /etc/letsencrypt/live/tarvex.tj/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/tarvex.tj/privkey.pem;

    client_max_body_size 108M;

    error_log  /var/log/nginx/error.log;
    access_log /var/log/nginx/access.log;
    access_log /var/log/nginx/rate_limit.log rate_limit;

    root /var/www/public;
    index index.php;

    # Apply rate limiting per IP
    limit_req zone=one burst=1 nodelay;
    limit_req_status 429;  # Return 429 Too Many Requests instead of 503

    # Allow certain paths without rate limiting
    location ~ ^/(assets|images|css|js)/ {
        # No rate limiting for static files
        try_files $uri =404;
    }

    location / {
        try_files $uri /index.php$is_args$args;
    }

    location ~ \.php$ {
        try_files $uri =404;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_pass php-fpm:9000;
        fastcgi_index index.php;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PHP_VALUE "error_log=/var/log/nginx/php_errors.log";

        fastcgi_buffers 16 16k;
        fastcgi_buffer_size 32k;
    }
}
